{"version":3,"file":"static/js/251.4d95b64a.chunk.js","mappings":"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","sources":["API/currencyAPI.js","webpack://wallet-leopards-team-FRONTEND/./src/components/Currency/currency.module.scss?74ad","components/Currency/Currency.jsx","components/ButtonAddTransactions/ButtonAddTransactions.module.scss","components/ButtonAddTransactions/ButtonAddTransactions.jsx","redux/modal/modalSelectors.js","webpack://wallet-leopards-team-FRONTEND/./src/components/Modal/ModalAddTransaction/ModalAddTransaction.module.scss?ad48","webpack://wallet-leopards-team-FRONTEND/./src/components/Modal/ModalUniversal.module.scss?f635","components/Modal/ModalUniversal.jsx","webpack://wallet-leopards-team-FRONTEND/./src/components/Modal/ModalAddTransaction/ModalAddTransactionCheckbox/ModalAddTransactionCheckbox.module.scss?a3f5","components/Modal/ModalAddTransaction/ModalAddTransactionCheckbox/ModalAddTransactionCheckbox.jsx","webpack://wallet-leopards-team-FRONTEND/./src/components/Modal/ModalAddTransaction/ModalAddTransactionForm/ModalAddTransactionForm.module.scss?d67b","components/Modal/ModalAddTransaction/ModalAddTransactionForm/ModalAddTransactionForm.jsx","components/Modal/ModalAddTransaction/ModalAddTransaction.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function getCurrency() {\n  try {\n    const response = await axios.get('https://api.monobank.ua/bank/currency');\n    localStorage.setItem('currencyData', JSON.stringify(response.data));\n    localStorage.setItem('currencyFetchTime', Date.now());\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getCurrency;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"currency_container__YPj7c\",\"table\":\"currency_table__z69t6\",\"tableHead\":\"currency_tableHead__i33kg\",\"tableList\":\"currency_tableList__WWS3P\",\"bodyContainer\":\"currency_bodyContainer__7gIiq\",\"bodyList\":\"currency_bodyList__jE9sg\",\"bodyData\":\"currency_bodyData__4GIlG\",\"loader\":\"currency_loader__fcwmi\"};","import { useEffect, useState } from 'react';\nimport getCurrency from '../../API/currencyAPI';\nimport Loader from '../Loader/Loader';\n\nimport css from './currency.module.scss';\n\nconst Currency = () => {\n  const [currency, setCurrency] = useState(null);\n\n  const dateNow = Date.now();\n  const currencyFetchItem = localStorage.getItem('currencyFetchTime');\n  const fetchByMinutes = Math.floor((dateNow - currencyFetchItem) / 60000);\n\n  let USD = {};\n  let EUR = {};\n\n  useEffect(() => {\n    if (fetchByMinutes < 60) return;\n    getCurrency().then(setCurrency);\n  }, [fetchByMinutes]);\n\n  const findCurrencyRate = (currency, code) => {\n    return currency.find(el => el.currencyCodeA === code);\n  };\n\n  if (currency) {\n    USD = findCurrencyRate(currency, 840);\n    EUR = findCurrencyRate(currency, 978);\n  }\n\n  const storageCurrency = localStorage?.getItem('currencyData');\n  const parsedCurrency = JSON.parse(storageCurrency);\n\n  if (parsedCurrency) {\n    USD = findCurrencyRate(parsedCurrency, 840);\n    EUR = findCurrencyRate(parsedCurrency, 978);\n  }\n\n  return (\n    <div className={css.table}>\n      <div className={css.tableHead}>\n        <ul className={css.tableList}>\n          <li>Currency</li>\n          <li>Purchase</li>\n          <li>Sale</li>\n        </ul>\n      </div>\n      {!currency && !parsedCurrency ? (\n        <div className={css.loader}>\n          <Loader height={'80'} width={'80'} color={'#ffffff'} />\n        </div>\n      ) : (\n        <div className={css.bodyContainer}>\n          <ul className={css.bodyList}>\n            <li>USD</li>\n            <li className={css.bodyData}>{USD?.rateBuy.toFixed(2)}</li>\n            <li>{USD?.rateSell.toFixed(2)}</li>\n          </ul>\n          <ul className={css.bodyList}>\n            <li>EUR</li>\n            <li className={css.bodyData}>{EUR?.rateBuy.toFixed(2)}</li>\n            <li>{EUR?.rateSell.toFixed(2)}</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Currency;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ButtonAddTransactions_container__AijWB\",\"openBtn\":\"ButtonAddTransactions_openBtn__mUV2r\",\"active\":\"ButtonAddTransactions_active__Q5ndr\"};","import { useDispatch } from 'react-redux';\nimport { toggleShowModalAddTransaction } from 'redux/modal/modalSlice';\nimport scss from './ButtonAddTransactions.module.scss';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleAddBtn = () => {\n    dispatch(toggleShowModalAddTransaction(true));\n  };\n  return (\n    <button className={scss.openBtn} type=\"button\" onClick={handleAddBtn}>\n      +\n    </button>\n  );\n};\n","const showModalAddTransaction = state => state.modal.showModalAddTransaction;\nconst showModalLogout = state => state.modal.showModalLogout;\n\nexport const modalSelectors = {\n  showModalAddTransaction,\n  showModalLogout,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ModalAddTransaction_container__RhcAj\",\"closeBtn\":\"ModalAddTransaction_closeBtn__KUoYn\",\"active\":\"ModalAddTransaction_active__WrVRC\",\"box\":\"ModalAddTransaction_box__Y41ZK\",\"title\":\"ModalAddTransaction_title__Wzy3o\",\"checkboxInfo\":\"ModalAddTransaction_checkboxInfo__UUVHb\",\"checkboxText\":\"ModalAddTransaction_checkboxText__hEFN4\",\"checkboxLabel\":\"ModalAddTransaction_checkboxLabel__e9gjX\",\"checkboxIconBox\":\"ModalAddTransaction_checkboxIconBox__VRx6X\",\"checkbox\":\"ModalAddTransaction_checkbox__bu7bN\",\"checkboxIcon\":\"ModalAddTransaction_checkboxIcon__woWDv\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ModalUniversal_container__IFLIQ\",\"modal__backdrop\":\"ModalUniversal_modal__backdrop__KxPUb\",\"modal__content\":\"ModalUniversal_modal__content__p7mNf\",\"btnClose\":\"ModalUniversal_btnClose__lyt9V\",\"btnClose__icon\":\"ModalUniversal_btnClose__icon__C5wxP\"};","import css from './ModalUniversal.module.scss';\nimport { createPortal } from 'react-dom';\nimport { FiX } from 'react-icons/fi';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalUniversal = prop => {\n  return createPortal(\n    <div className={css.modal__backdrop} onClick={prop.onClick} type=\"flipInX\">\n      <div className={css.modal__content}>\n        <button className={css.btnClose} onClick={prop.onClose}>\n          <FiX className={css.btnClose__icon} />\n        </button>\n        {prop.children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalUniversal;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ModalAddTransactionCheckbox_container__LlXH9\",\"checkboxInfo\":\"ModalAddTransactionCheckbox_checkboxInfo__flVEV\",\"checkboxText\":\"ModalAddTransactionCheckbox_checkboxText__fdHit\",\"checkboxLabel\":\"ModalAddTransactionCheckbox_checkboxLabel__8-IHO\",\"checkboxIconBox\":\"ModalAddTransactionCheckbox_checkboxIconBox__ZMmRM\",\"checkbox\":\"ModalAddTransactionCheckbox_checkbox__xIemf\",\"checkboxIcon\":\"ModalAddTransactionCheckbox_checkboxIcon__WkWBj\"};","import { HiOutlinePlus, HiOutlineMinus } from 'react-icons/hi';\nimport scss from './ModalAddTransactionCheckbox.module.scss';\n\nconst ModalAddTransactionCheckbox = prop => {\n  const { onHandleCheckbox, checkboxStatus } = prop;\n  return (\n    <div className={scss.checkboxInfo}>\n      <span\n        className={scss.checkboxText}\n        style={checkboxStatus ? { color: '#24CCA7' } : { color: '#e0e0e0' }}\n      >\n        Income\n      </span>\n      <label className={scss.checkboxLabel} onClick={onHandleCheckbox}>\n        <input className={scss.checkbox} type=\"checkbox\" />\n        <div className={scss.checkboxIconBox} onClick={onHandleCheckbox}>\n          {checkboxStatus ? (\n            <HiOutlinePlus className={scss.checkboxIcon} />\n          ) : (\n            <HiOutlineMinus className={scss.checkboxIcon} />\n          )}\n        </div>\n      </label>\n      <span\n        className={scss.checkboxText}\n        style={!checkboxStatus ? { color: '#FF6596' } : { color: '#e0e0e0' }}\n      >\n        Expense\n      </span>\n    </div>\n  );\n};\nexport default ModalAddTransactionCheckbox;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ModalAddTransactionForm_container__mInSF\",\"addBtn\":\"ModalAddTransactionForm_addBtn__knwpQ\",\"active\":\"ModalAddTransactionForm_active__9yLuK\",\"calculatorForm\":\"ModalAddTransactionForm_calculatorForm__QZSjn\",\"calculatorFormInputContainer\":\"ModalAddTransactionForm_calculatorFormInputContainer__jj88S\",\"dataBox\":\"ModalAddTransactionForm_dataBox__MJu+2\",\"dataBtn\":\"ModalAddTransactionForm_dataBtn__DRe3G\",\"dataBtnIcon\":\"ModalAddTransactionForm_dataBtnIcon__r8pPK\",\"calculatorFormInput\":\"ModalAddTransactionForm_calculatorFormInput__9O+Tx\",\"calculatorFormTextarea\":\"ModalAddTransactionForm_calculatorFormTextarea__gwhcJ\",\"errorMessage\":\"ModalAddTransactionForm_errorMessage__vxNNQ\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Datetime from 'react-datetime';\n// import { useState } from 'react';\nimport 'react-datetime/css/react-datetime.css';\nimport { RiCalendar2Line } from 'react-icons/ri';\nimport scss from './ModalAddTransactionForm.module.scss';\n\nconst schema = yup.object().shape({\n  sum: yup.number().min(0.01).max(2500000).required(),\n  // date: yup.date().required(),\n});\nconst initialValues = {\n  category: '',\n  sum: '',\n  // date: '',\n};\n\nconst ModalAddTransactionForm = prop => {\n  const { checkboxStatus } = prop;\n  // const [date, setDate] = useState('');\n\n  // const getDate = e => {\n  //   const oldDate = new Date(Date.parse(e._d));\n  //   let dd = oldDate.getDate();\n  //   if (dd < 10) {\n  //     dd = '0' + dd;\n  //   }\n  //   let mm = oldDate.getMonth() + 1;\n  //   if (mm < 10) {\n  //     mm = '0' + mm;\n  //   }\n  //   let yy = oldDate.getFullYear();\n\n  //   const newDate = dd + '.' + mm + '.' + yy;\n\n  //   return setDate(newDate);\n  // };\n\n  const renderInput = (props, openCalendar) => {\n    return (\n      <div className={scss.dataBox}>\n        <Field\n          {...props}\n          className={scss.calculatorFormInput}\n          type=\"text\"\n          placeholder=\"date\"\n          name=\"date\"\n          autoComplete=\"off\"\n        ></Field>\n        <button className={scss.dataBtn} type=\"button\" onClick={openCalendar}>\n          <RiCalendar2Line className={scss.dataBtnIcon}></RiCalendar2Line>\n        </button>\n        {/* <ErrorMessage\n          className={scss.errorMessage}\n          name=\"date\"\n          component=\"div\"\n        ></ErrorMessage> */}\n      </div>\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      // onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Form className={scss.calculatorForm}>\n        <div className={scss.calculatorFormInputContainer}>\n          {!checkboxStatus && (\n            <label>\n              <Field\n                className={scss.calculatorFormInput}\n                type=\"text\"\n                placeholder=\"Select a category\"\n                name=\"category\"\n              ></Field>\n\n              <ErrorMessage\n                className={scss.errorMessage}\n                name=\"category\"\n                component=\"div\"\n              ></ErrorMessage>\n            </label>\n          )}\n          <label>\n            <Field\n              className={scss.calculatorFormInput}\n              type=\"text\"\n              placeholder=\"0.00\"\n              name=\"sum\"\n            ></Field>\n\n            <ErrorMessage\n              className={scss.errorMessage}\n              name=\"sum\"\n              component=\"div\"\n            ></ErrorMessage>\n          </label>\n          <label>\n            <Datetime\n              timeFormat={false}\n              renderInput={renderInput}\n              dateFormat=\"DD.MM.YYYY\"\n              closeOnSelect={true}\n              initialValue={new Date()}\n              // onChange={getDate}\n            />\n          </label>\n          <label>\n            <Field\n              className={scss.calculatorFormTextarea}\n              name=\"Comment\"\n              component=\"textarea\"\n              placeholder=\"Comment\"\n            ></Field>\n            <ErrorMessage\n              className={scss.errorMessage}\n              name=\"Comment\"\n              component=\"div\"\n            ></ErrorMessage>\n          </label>\n        </div>\n        <button type=\"submit\" className={scss.addBtn}>\n          Add\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ModalAddTransactionForm;\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { toggleShowModalAddTransaction } from 'redux/modal/modalSlice';\nimport scss from './ModalAddTransaction.module.scss';\nimport ModalUniversal from '../ModalUniversal';\nimport ModalAddTransactionCheckbox from './ModalAddTransactionCheckbox/ModalAddTransactionCheckbox';\nimport ModalAddTransactionForm from './ModalAddTransactionForm/ModalAddTransactionForm';\n\nconst ModalAddTransaction = () => {\n  const dispatch = useDispatch();\n\n  const [checkboxStatus, setCheckboxStatus] = useState(false);\n\n  const handleCloseModal = () => {\n    dispatch(toggleShowModalAddTransaction(false));\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      handleCloseModal();\n    }\n  };\n\n  const escKeyDown = e => {\n    if (e.code === 'Escape') {\n      handleCloseModal();\n    }\n  };\n\n  const handleCheckbox = e => {\n    if (e.currentTarget === e.target) {\n      setCheckboxStatus(!checkboxStatus);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', escKeyDown);\n    return () => {\n      document.removeEventListener('keydown', escKeyDown);\n    };\n  });\n  return (\n    <ModalUniversal onClose={handleCloseModal} onClick={handleBackdropClick}>\n      <div className={scss.box}>\n        <h2 className={scss.title}>Add transaction</h2>\n        <ModalAddTransactionCheckbox\n          onHandleCheckbox={handleCheckbox}\n          checkboxStatus={checkboxStatus}\n        ></ModalAddTransactionCheckbox>\n        <ModalAddTransactionForm\n          checkboxStatus={checkboxStatus}\n        ></ModalAddTransactionForm>\n        <button\n          className={scss.closeBtn}\n          type=\"button\"\n          onClick={handleCloseModal}\n        >\n          cancel\n        </button>\n      </div>\n    </ModalUniversal>\n  );\n};\n\nexport default ModalAddTransaction;\n","import Currency from 'components/Currency/Currency';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { useSelector } from 'react-redux';\nimport { modalSelectors } from 'redux/modal/modalSelectors';\nimport ModalAddTransaction from 'components/Modal/ModalAddTransaction/ModalAddTransaction';\n// import Statistic from '../../components/Statistics/Statistics';\n// import HomeTabMobile from 'components/HomeTabMobile/HomeTabMobile';\n// import HomeTab from 'components/HomeTab/HomeTab';\n\nconst HomePage = () => {\n  const showModalAddTransaction = useSelector(\n    modalSelectors.showModalAddTransaction\n  );\n  return (\n    <>\n      {showModalAddTransaction && <ModalAddTransaction />}\n      <Currency />\n      <ButtonAddTransactions></ButtonAddTransactions>\n      <div>HomePage</div>\n      {/* <Statistic /> */}\n      {/* <HomeTab /> */}\n      {/* <HomeTabMobile /> */}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["getCurrency","axios","response","localStorage","setItem","JSON","stringify","data","Date","now","console","error","useState","currency","setCurrency","dateNow","currencyFetchItem","getItem","fetchByMinutes","Math","floor","USD","EUR","useEffect","then","findCurrencyRate","code","find","el","currencyCodeA","storageCurrency","parsedCurrency","parse","className","css","rateBuy","toFixed","rateSell","Loader","height","width","color","ButtonAddTransactions","dispatch","useDispatch","scss","type","onClick","toggleShowModalAddTransaction","modalSelectors","state","modal","showModalAddTransaction","modalRoot","document","querySelector","prop","createPortal","onClose","children","onHandleCheckbox","checkboxStatus","style","schema","yup","shape","sum","min","max","required","initialValues","category","validationSchema","placeholder","name","component","timeFormat","renderInput","props","openCalendar","autoComplete","dateFormat","closeOnSelect","initialValue","setCheckboxStatus","handleCloseModal","escKeyDown","e","addEventListener","removeEventListener","currentTarget","target","useSelector"],"sourceRoot":""}