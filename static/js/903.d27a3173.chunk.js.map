{"version":3,"file":"static/js/903.d27a3173.chunk.js","mappings":"2OACA,EAA8B,kCAA9B,EAAiH,+BAAjH,EAA4J,gCAA5J,EAAmM,2BAAnM,EAAqO,2BAArO,EAAwQ,4BAAxQ,EAA4S,4BAA5S,EAAqV,iC,kBCArV,EAA2B,mC,UCsC3B,EAnCyB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACpBC,EAASC,IAAOF,GAChBG,EAAsB,IAAfF,EAAOG,MAAe,EAE7BC,EAAgB,WACpB,OAAQJ,EAAOG,OACb,KAAK,EAUL,QACE,MAAO,OATT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UAIZ,EAOD,OACE,+BACE,gBAAKE,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAYC,MARC,CACjCC,MAAM,GAAD,OAAKN,EAAL,KACLO,WAAYL,UAUf,E,UCsCD,EAnEqB,WACnB,IAOA,GAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOX,EAAP,KAAiBY,EAAjB,KAMMC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KACJG,QAAQ,kDAAmD,0BAC3DD,MAAM,0BACNE,IAAI,IACJC,IAAI,IACJC,SAAS,kBACZpB,SAAUc,EAAAA,KACPI,IAAI,EAAG,iCACPC,IAAI,GAAI,cACRC,SAAS,kBACZC,gBAAiBP,EAAAA,KACdQ,MAAM,CAACR,EAAAA,GAAQ,aAAc,0BAC7BM,SAAS,kBACZG,UAAWT,EAAAA,KACRI,IAAI,GACJC,IAAI,GAAI,iBACRC,SAAS,oBAGd,OACE,iBAAKd,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,KAChB,SAAC,KAAD,CACEiB,cArCgB,CACpBR,MAAO,GACPhB,SAAU,GACVqB,gBAAiB,GACjBE,UAAW,IAkCPE,SA7BW,SAACC,GAChBC,QAAQC,IAAIF,EACb,EA4BKG,iBAAkBhB,EAHpB,UAIE,UAAC,KAAD,CAAMP,UAAWC,EAAjB,WACE,mBAAOD,UAAWC,EAAlB,WACE,SAAC,KAAD,CAAOuB,KAAK,QAAQC,KAAK,QAAQC,YAAY,SAAS1B,UAAWC,KACjE,SAAC,KAAD,CAAcwB,KAAK,QAAQE,UAAU,IAAI3B,UAAWC,QAEtD,mBAAOD,UAAWC,EAAlB,WACE,SAAC,KAAD,CAAOuB,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAW1B,UAAWC,EAAS2B,QAAS,SAAAC,GAAC,OAAIvB,EAAYuB,EAAEC,OAAOC,MAAzB,KAC5F,SAAC,KAAD,CAAcN,KAAK,WAAWE,UAAU,IAAI3B,UAAWC,QAEzD,mBAAOD,UAAWC,EAAlB,WACE,SAAC,KAAD,CAAOuB,KAAK,WAAWC,KAAK,kBAAkBC,YAAY,mBAAmB1B,UAAWC,KACxF,SAAC,KAAD,CAAcwB,KAAK,kBAAkBE,UAAU,IAAI3B,UAAWC,KAC9D,SAAC,EAAD,CAAkBP,SAAUA,QAE9B,mBAAOM,UAAWC,EAAlB,WACE,SAAC,KAAD,CAAOuB,KAAK,OAAOC,KAAK,YAAYC,YAAY,aAAa1B,UAAWC,KACxE,SAAC,KAAD,CAAcwB,KAAK,YAAYE,UAAU,IAAI3B,UAAWC,QAE1D,mBAAQuB,KAAK,SAASxB,UAAWC,EAAjC,uBACA,SAAC,KAAD,CAAM+B,GAAG,SAAShC,UAAWC,EAA7B,2BAKT,EC/DD,EARqB,WACnB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["webpack://wallet-leopards-team-FRONTEND/./src/components/RegisterForm/RegisterForm.module.scss?ecac","webpack://wallet-leopards-team-FRONTEND/./src/components/RegisterForm/PasswordStrength.module.scss?8ff5","components/RegisterForm/PasswordStrength.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerBtn\":\"RegisterForm_registerBtn__VfqX3\",\"active\":\"RegisterForm_active__HcRGL\",\"loginBtn\":\"RegisterForm_loginBtn__TRL7n\",\"container\":\"RegisterForm_container__kVfjz\",\"logo\":\"RegisterForm_logo__enFNJ\",\"form\":\"RegisterForm_form__5aEEn\",\"input\":\"RegisterForm_input__IemEh\",\"label\":\"RegisterForm_label__OWQvs\",\"errorField\":\"RegisterForm_errorField__6aeZo\"};","// extracted by mini-css-extract-plugin\nexport default {\"progress\":\"PasswordStrength_progress__VRWhX\"};","import React from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport s from '../RegisterForm/PasswordStrength.module.scss';\n\nconst PasswordStrength = ({ password }) => {\n  const result = zxcvbn(password);\n  const num = (result.score * 100) / 4;\n\n  const progressColor = () => {\n    switch (result.score) {\n      case 0:\n        return 'none';\n      case 1:\n        return '#EA1111';\n      case 2:\n        return '#FFAD00';\n      case 3:\n        return '#9bc158';\n      case 4:\n        return '#00b500';\n      default:\n        return 'none';\n    }\n  }\n\n  const changePasswordColor = () => ({\n    width: `${num}%`,\n    background: progressColor()\n  })\n\n  return (\n    <>\n      <div className={s.progress}>\n        <div className={s.progress} style={changePasswordColor()}></div>\n      </div>\n    </>\n)\n}\n\nexport default PasswordStrength;","import React from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport s from \"../RegisterForm/RegisterForm.module.scss\";\nimport PasswordStrength from \"./PasswordStrength\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    firstName: ''\n  }\n\n  const [password, setPassword] = useState('');\n\n  const onSubmit = (values) => {\n    console.log(values);\n  }\n\n  const SignUpSchema = Yup.object().shape({\n    email: Yup.string()\n      .matches(/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/, \"Must be a valid email!\")\n      .email(\"Must be a valid email!\")\n      .min(10)\n      .max(63)\n      .required(\"Required field\"),\n    password: Yup.string()\n      .min(6, \"Minimum 6 characters required\")\n      .max(12, \"Maximum 12\")\n      .required(\"Required field\"),\n    passwordConfirm: Yup.string()\n      .oneOf([Yup.ref('password')], \"Passwords don't match!\")\n      .required(\"Required field\"),\n    firstName: Yup.string()\n      .min(1)\n      .max(12, \"Too long name\")\n      .required(\"Required field\")\n  })\n\n  return (\n    <div className={s.container}>\n      <div className={s.logo}></div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={SignUpSchema}>\n        <Form className={s.form}>\n          <label className={s.label}>\n            <Field type=\"email\" name=\"email\" placeholder=\"E-mail\" className={s.input} />\n            <ErrorMessage name=\"email\" component=\"p\" className={s.errorField} />\n          </label>\n          <label className={s.label}>\n            <Field type=\"password\" name=\"password\" placeholder=\"Password\" className={s.input} onInput={e => setPassword(e.target.value)} />\n            <ErrorMessage name=\"password\" component=\"p\" className={s.errorField} />\n          </label>\n          <label className={s.label}>\n            <Field type=\"password\" name=\"passwordConfirm\" placeholder=\"Confirm password\" className={s.input} />\n            <ErrorMessage name=\"passwordConfirm\" component=\"p\" className={s.errorField} />\n            <PasswordStrength password={password} />\n          </label>\n          <label className={s.label}>\n            <Field type=\"text\" name=\"firstName\" placeholder=\"First name\" className={s.input} />\n            <ErrorMessage name=\"firstName\" component=\"p\" className={s.errorField} />\n          </label>\n          <button type=\"submit\" className={s.registerBtn}>REGISTER</button>\n          <Link to=\"/login\" className={s.loginBtn}>LOG IN</Link>\n        </Form>\n      </Formik>\n    </div>\n  )\n}\n\nexport default RegisterForm;","import RegisterForm from \"components/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm/>\n    </>\n  )\n}\n\nexport default RegisterPage;"],"names":["password","result","zxcvbn","num","score","progressColor","className","s","style","width","background","useState","setPassword","SignUpSchema","Yup","shape","email","matches","min","max","required","passwordConfirm","oneOf","firstName","initialValues","onSubmit","values","console","log","validationSchema","type","name","placeholder","component","onInput","e","target","value","to"],"sourceRoot":""}